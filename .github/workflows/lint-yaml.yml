name: Lint YAML

on:
  push:
    branches:
      - main
    paths:
      - "data/**"
      - "settings.yml"
      - ".yamllint"
      - "poetry.lock"
      - "pyproject.toml"
      - ".github/workflows/lint-yaml.yml"
  pull_request:
    branches:
      - main
    paths:
      - "data/**"
      - "settings.yml"
      - ".yamllint"
      - "poetry.lock"
      - "pyproject.toml"
      - ".github/workflows/lint-yaml.yml"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c  # v46.0.5
      id: changed-dirs
      with:
        dir_names: 'true'
    # Python & dependency installation
    - uses: actions/checkout@v3
    - name: Yaml file linting
      run: |
        docker run --rm \
        -v $(pwd):/code \
        registry.gitlab.com/pipeline-components/yamllint:0.34.0 \
        -s .
    - name: setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: install Poetry
      uses: snok/install-poetry@v1.3.3
    - name: cache Poetry virtualenv
      uses: actions/cache@v3
      id: cache
      with:
        path: ~/.virtualenvs/
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}
    - name: set poetry config path
      run: poetry config virtualenvs.path ~/.virtualenvs
    - name: install dependencies
      run: poetry install --no-root
      # if: steps.cache.outputs.cache-hit != 'true'

#    - name: lint people
#      run: poetry run os-people lint
#      env:
#        OS_PEOPLE_DIRECTORY: ${{ env.GITHUB_WORKSPACE }}
    - name: lint people selectively
      env:
        ALL_CHANGED_DIRS: ${{ steps.changed-dirs.outputs.all_changed_files }}
        OS_PEOPLE_DIRECTORY: ${{ env.GITHUB_WORKSPACE }}
      run: |
        for dir in ${ALL_CHANGED_DIRS}; do
          if [[ "$dir" =~ ^data/(ak|al|ar|az|ca|co|ct|dc|de|fl|ga|hi|ia|id|il|in|ks|ky|la|ma|md|me|mi|mn|mo|ms|mt|nc|nd|ne|nh|nj|nm|nv|ny|oh|ok|or|pa|pr|ri|sc|sd|tn|tx|us|ut|va|vt|wa|wi|wv|wy)/(legislature|retired|executive|municipalities) ]]; then
            dir=${BASH_REMATCH[1]}
            poetry run os-people lint "$dir"
          else
            echo "$dir contains changes, but ignored for linting"
          fi
        done
    - name: lint committees
      run: poetry run os-committees lint
      env:
        OS_PEOPLE_DIRECTORY: ${{ env.GITHUB_WORKSPACE }}
